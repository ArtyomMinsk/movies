# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-16 18:46
from __future__ import unicode_literals
from django.db import migrations, models
from django.contrib.auth.models import User
import pandas as pd
import os


# TODO: Set relative path for import data
def import_data(apps, schema_editor):
    file_path = os.path.abspath('../ml-1m')
    movies = pd.read_csv(file_path + "/movies.dat",
                         sep="::",
                         names=['movie_id', 'title', 'genre'],
                         engine='python')

    users = pd.read_csv(file_path + "/users.dat",
                        sep="::",
                        names=['user_id', 'gender',
                               'age', 'occupation', 'zip_code'],
                        engine='python')

    ratings = pd.read_csv(file_path + "/ratings.dat",
                          sep="::",
                          names=['user_id', 'movie_id', 'score', 'timestamp'],
                          engine='python')
    ratings['ts'] = ratings['timestamp'].apply(
                        lambda x: pd.to_datetime(
                            x * 1000000000).tz_localize('EST'))

    Movie = apps.get_model("movies", "Movie")
    Rating = apps.get_model("movies", "Rating")
    Rater = apps.get_model("movies", "Rater")

    print("Data collected")

    # import movies
    movie_dict = {}
    for index, movie in movies.iterrows():
        mov = Movie(id=movie['movie_id'],
                    title=movie['title'], genre=movie['genre'])
        mov.save()
        movie_dict[mov.id] = mov

    print("Movies imported")

    # import users
    user_dict = {}
    for index, user in users.iterrows():
        usr = User.objects.create_user(username=user['user_id'],
                                       password='password')
        rater = Rater(id=usr.id, gender=user['gender'],
                      age=user['age'], occupation=user['occupation'],
                      zip_code=user['zip_code'], user_id=usr.id)
        rater.save()
        user_dict[rater.id] = rater

    print("Users imported")

    # import ratings
    for index, rating in ratings.iterrows():
        user = user_dict[rating['user_id']]
        movie = movie_dict[rating['movie_id']]
        rtg = Rating(rater=user, movie=movie,
                     timestamp=rating['ts'], score=rating['score'])
        rtg.save()

    print("Ratings imported")


def update_occupation_values(apps, schema_editor):
    Rater = apps.get_model("movies", "Rater")
    raters = Rater.objects.all()
    occupation_map = {
        '0':  "other or not specified",
        '1':  "academic/educator",
        '2':  "artist",
        '3':  "clerical/admin",
        '4':  "college/grad student",
        '5':  "customer service",
        '6':  "doctor/health care",
        '7':  "executive/managerial",
        '8':  "farmer",
        '9':  "homemaker",
        '10':  "K-12 student",
        '11':  "lawyer",
        '12':  "programmer",
        '13':  "retired",
        '14':  "sales/marketing",
        '15':  "scientist",
        '16':  "self-employed",
        '17':  "technician/engineer",
        '18':  "tradesman/craftsman",
        '19':  "unemployed",
        '20':  "writer"
    }

    for rater in raters:
        rater.occupation = occupation_map[rater.occupation]
        rater.save()


def update_age_values(apps, schema_editor):
    Rater = apps.get_model("movies", "Rater")
    raters = Rater.objects.all()
    age_map = {
     '1':  "Under 18",
     '18':  "18-24",
     '25':  "25-34",
     '35':  "35-44",
     '45':  "45-49",
     '50':  "50-55",
     '56':  "56+",
     }
    for rater in raters:
        rater.age = age_map[rater.age]
        rater.save()


class Migration(migrations.Migration):

    dependencies = [
        ('movies', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(import_data),
        migrations.RunPython(update_occupation_values),
        migrations.RunPython(update_age_values),
    ]
